/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as CalendarRouteImport } from './routes/calendar'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CommunitiesIndexRouteImport } from './routes/communities/index'
import { Route as EventsSubmitRouteImport } from './routes/events/submit'
import { Route as EventsEventIdRouteImport } from './routes/events/$eventId'
import { Route as CommunitiesCreateRouteImport } from './routes/communities/create'
import { Route as CommunitiesCommunityIdRouteImport } from './routes/communities/$communityId'

// Create/Update Routes

const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const CalendarRoute = CalendarRouteImport.update({
  id: '/calendar',
  path: '/calendar',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CommunitiesIndexRoute = CommunitiesIndexRouteImport.update({
  id: '/communities/',
  path: '/communities/',
  getParentRoute: () => rootRoute,
} as any)

const EventsSubmitRoute = EventsSubmitRouteImport.update({
  id: '/events/submit',
  path: '/events/submit',
  getParentRoute: () => rootRoute,
} as any)

const EventsEventIdRoute = EventsEventIdRouteImport.update({
  id: '/events/$eventId',
  path: '/events/$eventId',
  getParentRoute: () => rootRoute,
} as any)

const CommunitiesCreateRoute = CommunitiesCreateRouteImport.update({
  id: '/communities/create',
  path: '/communities/create',
  getParentRoute: () => rootRoute,
} as any)

const CommunitiesCommunityIdRoute = CommunitiesCommunityIdRouteImport.update({
  id: '/communities/$communityId',
  path: '/communities/$communityId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRoute
    }
    '/calendar': {
      id: '/calendar'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarRouteImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRoute
    }
    '/communities/$communityId': {
      id: '/communities/$communityId'
      path: '/communities/$communityId'
      fullPath: '/communities/$communityId'
      preLoaderRoute: typeof CommunitiesCommunityIdRouteImport
      parentRoute: typeof rootRoute
    }
    '/communities/create': {
      id: '/communities/create'
      path: '/communities/create'
      fullPath: '/communities/create'
      preLoaderRoute: typeof CommunitiesCreateRouteImport
      parentRoute: typeof rootRoute
    }
    '/events/$eventId': {
      id: '/events/$eventId'
      path: '/events/$eventId'
      fullPath: '/events/$eventId'
      preLoaderRoute: typeof EventsEventIdRouteImport
      parentRoute: typeof rootRoute
    }
    '/events/submit': {
      id: '/events/submit'
      path: '/events/submit'
      fullPath: '/events/submit'
      preLoaderRoute: typeof EventsSubmitRouteImport
      parentRoute: typeof rootRoute
    }
    '/communities/': {
      id: '/communities/'
      path: '/communities'
      fullPath: '/communities'
      preLoaderRoute: typeof CommunitiesIndexRouteImport
      parentRoute: typeof rootRoute
    }
  }
}

// Add type-safety to the createFileRoute function across the route tree

declare module './routes/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >
}
declare module './routes/calendar' {
  const createFileRoute: CreateFileRoute<
    '/calendar',
    FileRoutesByPath['/calendar']['parentRoute'],
    FileRoutesByPath['/calendar']['id'],
    FileRoutesByPath['/calendar']['path'],
    FileRoutesByPath['/calendar']['fullPath']
  >
}
declare module './routes/profile' {
  const createFileRoute: CreateFileRoute<
    '/profile',
    FileRoutesByPath['/profile']['parentRoute'],
    FileRoutesByPath['/profile']['id'],
    FileRoutesByPath['/profile']['path'],
    FileRoutesByPath['/profile']['fullPath']
  >
}
declare module './routes/sign-in' {
  const createFileRoute: CreateFileRoute<
    '/sign-in',
    FileRoutesByPath['/sign-in']['parentRoute'],
    FileRoutesByPath['/sign-in']['id'],
    FileRoutesByPath['/sign-in']['path'],
    FileRoutesByPath['/sign-in']['fullPath']
  >
}
declare module './routes/sign-up' {
  const createFileRoute: CreateFileRoute<
    '/sign-up',
    FileRoutesByPath['/sign-up']['parentRoute'],
    FileRoutesByPath['/sign-up']['id'],
    FileRoutesByPath['/sign-up']['path'],
    FileRoutesByPath['/sign-up']['fullPath']
  >
}
declare module './routes/communities/$communityId' {
  const createFileRoute: CreateFileRoute<
    '/communities/$communityId',
    FileRoutesByPath['/communities/$communityId']['parentRoute'],
    FileRoutesByPath['/communities/$communityId']['id'],
    FileRoutesByPath['/communities/$communityId']['path'],
    FileRoutesByPath['/communities/$communityId']['fullPath']
  >
}
declare module './routes/communities/create' {
  const createFileRoute: CreateFileRoute<
    '/communities/create',
    FileRoutesByPath['/communities/create']['parentRoute'],
    FileRoutesByPath['/communities/create']['id'],
    FileRoutesByPath['/communities/create']['path'],
    FileRoutesByPath['/communities/create']['fullPath']
  >
}
declare module './routes/events/$eventId' {
  const createFileRoute: CreateFileRoute<
    '/events/$eventId',
    FileRoutesByPath['/events/$eventId']['parentRoute'],
    FileRoutesByPath['/events/$eventId']['id'],
    FileRoutesByPath['/events/$eventId']['path'],
    FileRoutesByPath['/events/$eventId']['fullPath']
  >
}
declare module './routes/events/submit' {
  const createFileRoute: CreateFileRoute<
    '/events/submit',
    FileRoutesByPath['/events/submit']['parentRoute'],
    FileRoutesByPath['/events/submit']['id'],
    FileRoutesByPath['/events/submit']['path'],
    FileRoutesByPath['/events/submit']['fullPath']
  >
}
declare module './routes/communities/index' {
  const createFileRoute: CreateFileRoute<
    '/communities/',
    FileRoutesByPath['/communities/']['parentRoute'],
    FileRoutesByPath['/communities/']['id'],
    FileRoutesByPath['/communities/']['path'],
    FileRoutesByPath['/communities/']['fullPath']
  >
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/calendar': typeof CalendarRoute
  '/profile': typeof ProfileRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/communities/$communityId': typeof CommunitiesCommunityIdRoute
  '/communities/create': typeof CommunitiesCreateRoute
  '/events/$eventId': typeof EventsEventIdRoute
  '/events/submit': typeof EventsSubmitRoute
  '/communities': typeof CommunitiesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/calendar': typeof CalendarRoute
  '/profile': typeof ProfileRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/communities/$communityId': typeof CommunitiesCommunityIdRoute
  '/communities/create': typeof CommunitiesCreateRoute
  '/events/$eventId': typeof EventsEventIdRoute
  '/events/submit': typeof EventsSubmitRoute
  '/communities': typeof CommunitiesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/calendar': typeof CalendarRoute
  '/profile': typeof ProfileRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/communities/$communityId': typeof CommunitiesCommunityIdRoute
  '/communities/create': typeof CommunitiesCreateRoute
  '/events/$eventId': typeof EventsEventIdRoute
  '/events/submit': typeof EventsSubmitRoute
  '/communities/': typeof CommunitiesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/calendar'
    | '/profile'
    | '/sign-in'
    | '/sign-up'
    | '/communities/$communityId'
    | '/communities/create'
    | '/events/$eventId'
    | '/events/submit'
    | '/communities'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/calendar'
    | '/profile'
    | '/sign-in'
    | '/sign-up'
    | '/communities/$communityId'
    | '/communities/create'
    | '/events/$eventId'
    | '/events/submit'
    | '/communities'
  id:
    | '__root__'
    | '/'
    | '/calendar'
    | '/profile'
    | '/sign-in'
    | '/sign-up'
    | '/communities/$communityId'
    | '/communities/create'
    | '/events/$eventId'
    | '/events/submit'
    | '/communities/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CalendarRoute: typeof CalendarRoute
  ProfileRoute: typeof ProfileRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  CommunitiesCommunityIdRoute: typeof CommunitiesCommunityIdRoute
  CommunitiesCreateRoute: typeof CommunitiesCreateRoute
  EventsEventIdRoute: typeof EventsEventIdRoute
  EventsSubmitRoute: typeof EventsSubmitRoute
  CommunitiesIndexRoute: typeof CommunitiesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CalendarRoute: CalendarRoute,
  ProfileRoute: ProfileRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  CommunitiesCommunityIdRoute: CommunitiesCommunityIdRoute,
  CommunitiesCreateRoute: CommunitiesCreateRoute,
  EventsEventIdRoute: EventsEventIdRoute,
  EventsSubmitRoute: EventsSubmitRoute,
  CommunitiesIndexRoute: CommunitiesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/calendar",
        "/profile",
        "/sign-in",
        "/sign-up",
        "/communities/$communityId",
        "/communities/create",
        "/events/$eventId",
        "/events/submit",
        "/communities/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/calendar": {
      "filePath": "calendar.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up.tsx"
    },
    "/communities/$communityId": {
      "filePath": "communities/$communityId.tsx"
    },
    "/communities/create": {
      "filePath": "communities/create.tsx"
    },
    "/events/$eventId": {
      "filePath": "events/$eventId.tsx"
    },
    "/events/submit": {
      "filePath": "events/submit.tsx"
    },
    "/communities/": {
      "filePath": "communities/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
