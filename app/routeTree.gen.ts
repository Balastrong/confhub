/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignUpImport } from './routes/sign-up'
import { Route as SignInImport } from './routes/sign-in'
import { Route as ProfileImport } from './routes/profile'
import { Route as IndexImport } from './routes/index'
import { Route as CommunityIndexImport } from './routes/community/index'
import { Route as ReviewSubmitImport } from './routes/review/submit'
import { Route as CommunityCommunityIdImport } from './routes/community/$communityId'
import { Route as CommunityManagementCreateImport } from './routes/community/management/create'
import { Route as CommunityManagementCommunityIdImport } from './routes/community/management/$communityId'

// Create/Update Routes

const SignUpRoute = SignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const SignInRoute = SignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CommunityIndexRoute = CommunityIndexImport.update({
  id: '/community/',
  path: '/community/',
  getParentRoute: () => rootRoute,
} as any)

const ReviewSubmitRoute = ReviewSubmitImport.update({
  id: '/review/submit',
  path: '/review/submit',
  getParentRoute: () => rootRoute,
} as any)

const CommunityCommunityIdRoute = CommunityCommunityIdImport.update({
  id: '/community/$communityId',
  path: '/community/$communityId',
  getParentRoute: () => rootRoute,
} as any)

const CommunityManagementCreateRoute = CommunityManagementCreateImport.update({
  id: '/community/management/create',
  path: '/community/management/create',
  getParentRoute: () => rootRoute,
} as any)

const CommunityManagementCommunityIdRoute =
  CommunityManagementCommunityIdImport.update({
    id: '/community/management/$communityId',
    path: '/community/management/$communityId',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpImport
      parentRoute: typeof rootRoute
    }
    '/community/$communityId': {
      id: '/community/$communityId'
      path: '/community/$communityId'
      fullPath: '/community/$communityId'
      preLoaderRoute: typeof CommunityCommunityIdImport
      parentRoute: typeof rootRoute
    }
    '/review/submit': {
      id: '/review/submit'
      path: '/review/submit'
      fullPath: '/review/submit'
      preLoaderRoute: typeof ReviewSubmitImport
      parentRoute: typeof rootRoute
    }
    '/community/': {
      id: '/community/'
      path: '/community'
      fullPath: '/community'
      preLoaderRoute: typeof CommunityIndexImport
      parentRoute: typeof rootRoute
    }
    '/community/management/$communityId': {
      id: '/community/management/$communityId'
      path: '/community/management/$communityId'
      fullPath: '/community/management/$communityId'
      preLoaderRoute: typeof CommunityManagementCommunityIdImport
      parentRoute: typeof rootRoute
    }
    '/community/management/create': {
      id: '/community/management/create'
      path: '/community/management/create'
      fullPath: '/community/management/create'
      preLoaderRoute: typeof CommunityManagementCreateImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/community/$communityId': typeof CommunityCommunityIdRoute
  '/review/submit': typeof ReviewSubmitRoute
  '/community': typeof CommunityIndexRoute
  '/community/management/$communityId': typeof CommunityManagementCommunityIdRoute
  '/community/management/create': typeof CommunityManagementCreateRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/community/$communityId': typeof CommunityCommunityIdRoute
  '/review/submit': typeof ReviewSubmitRoute
  '/community': typeof CommunityIndexRoute
  '/community/management/$communityId': typeof CommunityManagementCommunityIdRoute
  '/community/management/create': typeof CommunityManagementCreateRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/community/$communityId': typeof CommunityCommunityIdRoute
  '/review/submit': typeof ReviewSubmitRoute
  '/community/': typeof CommunityIndexRoute
  '/community/management/$communityId': typeof CommunityManagementCommunityIdRoute
  '/community/management/create': typeof CommunityManagementCreateRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/profile'
    | '/sign-in'
    | '/sign-up'
    | '/community/$communityId'
    | '/review/submit'
    | '/community'
    | '/community/management/$communityId'
    | '/community/management/create'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/profile'
    | '/sign-in'
    | '/sign-up'
    | '/community/$communityId'
    | '/review/submit'
    | '/community'
    | '/community/management/$communityId'
    | '/community/management/create'
  id:
    | '__root__'
    | '/'
    | '/profile'
    | '/sign-in'
    | '/sign-up'
    | '/community/$communityId'
    | '/review/submit'
    | '/community/'
    | '/community/management/$communityId'
    | '/community/management/create'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProfileRoute: typeof ProfileRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  CommunityCommunityIdRoute: typeof CommunityCommunityIdRoute
  ReviewSubmitRoute: typeof ReviewSubmitRoute
  CommunityIndexRoute: typeof CommunityIndexRoute
  CommunityManagementCommunityIdRoute: typeof CommunityManagementCommunityIdRoute
  CommunityManagementCreateRoute: typeof CommunityManagementCreateRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProfileRoute: ProfileRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  CommunityCommunityIdRoute: CommunityCommunityIdRoute,
  ReviewSubmitRoute: ReviewSubmitRoute,
  CommunityIndexRoute: CommunityIndexRoute,
  CommunityManagementCommunityIdRoute: CommunityManagementCommunityIdRoute,
  CommunityManagementCreateRoute: CommunityManagementCreateRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/profile",
        "/sign-in",
        "/sign-up",
        "/community/$communityId",
        "/review/submit",
        "/community/",
        "/community/management/$communityId",
        "/community/management/create"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up.tsx"
    },
    "/community/$communityId": {
      "filePath": "community/$communityId.tsx"
    },
    "/review/submit": {
      "filePath": "review/submit.tsx"
    },
    "/community/": {
      "filePath": "community/index.tsx"
    },
    "/community/management/$communityId": {
      "filePath": "community/management/$communityId.tsx"
    },
    "/community/management/create": {
      "filePath": "community/management/create.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
